name: Android Debug Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ANDROID_HOME: ${{ github.workspace }}/android-sdk
  ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Vérification de la structure du projet
        run: |
          echo "Vérification de la structure du projet..."
          [ ! -d "android" ] && echo "Le répertoire 'android' est manquant." && exit 1
          [ ! -f "package.json" ] && echo "Le fichier 'package.json' est manquant." && exit 1
          [ ! -f "android/build.gradle" ] && echo "Le fichier 'android/build.gradle' est manquant." && exit 1
          echo "Structure du projet validée."

      - name: Installer les dépendances système
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Install Android SDK
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk.zip
          unzip sdk.zip -d tmp-sdk
          mv tmp-sdk/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm -rf tmp-sdk sdk.zip
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Configurer Android SDK
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          sdkmanager "ndk;26.1.10909125" "cmake;3.22.1"
          sdkmanager --update

      - name: Détecter la version de Node.js
        id: detect-node
        run: |
          if [ -f "package.json" ]; then
            version=$(jq -r '.engines.node // "18"' package.json)
            echo "version=${version}" >> $GITHUB_OUTPUT
          else
            echo "version=18" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.detect-node.outputs.version }}
          cache: 'npm'

      - name: Installer les dépendances npm
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Supprimer FFmpeg-Kit si présent
        run: |
          if grep -q "ffmpeg-kit" package.json; then
            echo "Suppression de ffmpeg-kit-react-native..."
            npm uninstall ffmpeg-kit-react-native
            rm -rf node_modules/ffmpeg-kit-react-native
          fi

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Configurer le projet Android
        run: |
          # Ajouter Maven Central si absent
          if ! grep -q "mavenCentral()" android/build.gradle; then
            sed -i '/repositories {/a\        mavenCentral()' android/build.gradle
          fi

          # Vérifier compileSdkVersion
          if ! grep -q "compileSdkVersion" android/build.gradle; then
            sed -i '/ext {/a\        compileSdkVersion = 34' android/build.gradle
          fi

          # Corriger react-native-reanimated si présent
          if [ -f "node_modules/react-native-reanimated/android/build.gradle" ]; then
            sed -i "s/apply plugin: 'maven'/apply plugin: 'maven-publish'/" node_modules/react-native-reanimated/android/build.gradle
          fi
        working-directory: android

      - name: Générer keystore de débogage
        run: |
          mkdir -p android/app
          keytool -genkeypair \
            -v \
            -keystore android/app/debug.keystore \
            -alias androiddebugkey \
            -storepass android \
            -keypass android \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=Android Debug,O=Android,C=US" \
            -deststoretype pkcs12

      - name: Build Debug APK
        run: ./gradlew assembleDebug -Dorg.gradle.jvmargs="-Xmx4096m -XX:MaxMetaspaceSize=1024m" --no-daemon
        working-directory: android

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 7
