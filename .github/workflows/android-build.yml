name: Android Debug Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.FFMPEG_PAT }} # ðŸ”‘ PAT GitHub avec read:packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: VÃ©rification de la structure du projet
        run: |
          if [ ! -d "android" ]; then echo "RÃ©pertoire android manquant"; exit 1; fi
          if [ ! -f "package.json" ]; then echo "package.json manquant"; exit 1; fi
          if [ ! -f "android/build.gradle" ]; then echo "android/build.gradle manquant"; exit 1; fi
          echo "Structure OK"

      - name: VÃ©rifier et installer jq
        run: |
          if ! command -v jq &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Install Android SDK (cmdline-tools)
        run: |
          mkdir -p android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk.zip
          unzip sdk.zip -d tmp-sdk
          mv tmp-sdk/cmdline-tools android-sdk/cmdline-tools/latest
          rm -rf tmp-sdk sdk.zip
          echo "ANDROID_HOME=$PWD/android-sdk" >> $GITHUB_ENV
          echo "$PWD/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$PWD/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "ANDROID_SDK_ROOT=$PWD/android-sdk" >> $GITHUB_ENV

      - name: Accepter les licences SDK et installer les composants nÃ©cessaires
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;26.1.10909125" "cmake;3.22.1"
          sdkmanager --update

      - name: Lire version de Node.js depuis package.json
        id: detect-node
        run: |
          if [ -f "package.json" ]; then
            version=$(jq -r '.engines.node' package.json)
            [ "$version" == "null" ] && version=18
          else
            version=18
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.detect-node.outputs.version }}

      - name: Installer les dÃ©pendances npm
        run: |
          if [ -f "package-lock.json" ]; then npm ci; else npm install; fi

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Configurer l'accÃ¨s Ã  FFmpeg Kit
        run: |
          echo "Ajout du repo FFmpeg Kit dans build.gradle"
          sed -i '/allprojects {/,/}/ {
            /repositories {/a \
                maven { url "https://maven.pkg.github.com/arthenica/ffmpeg-kit" \n\
                    credentials { \n\
                        username = System.getenv("GITHUB_ACTOR") \n\
                        password = System.getenv("GITHUB_TOKEN") \n\
                    } \n\
                }
          }' android/build.gradle

      - name: GÃ©nÃ©rer un keystore de dÃ©bogage
        run: |
          if ! keytool -list -v -keystore android/app/debug.keystore -alias androiddebugkey -storepass android > /dev/null 2>&1; then
            keytool -genkeypair -v \
              -keystore android/app/debug.keystore \
              -alias androiddebugkey \
              -storepass android \
              -keypass android \
              -keyalg RSA \
              -keysize 2048 \
              -validity 10000 \
              -dname "CN=Android Debug,O=Android,C=US" \
              -deststoretype pkcs12
          fi

      - name: Build Debug APK
        working-directory: android
        run: ./gradlew assembleDebug -Dorg.gradle.jvmargs="-Xmx4096m -XX:MaxMetaspaceSize=1024m" --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 7
