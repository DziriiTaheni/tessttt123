name: Android Debug Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env: # üîë On d√©finit l'acc√®s au registry globalement
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.FFMPEG_PAT }} # ‚ö†Ô∏è Cr√©e un secret FFMPEG_PAT avec un PAT GitHub (scope: read:packages)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: V√©rification de la structure du projet
        run: |
          echo "V√©rification de la structure du projet..."
          if [ ! -d "android" ]; then
            echo "Le r√©pertoire 'android' est manquant. Assurez-vous que c'est un projet Android ou React Native."
            exit 1
          fi
          if [ ! -f "package.json" ]; then
            echo "Le fichier 'package.json' est manquant. Assurez-vous que c'est un projet React Native."
            exit 1
          fi
          if [ ! -f "android/build.gradle" ]; then
            echo "Le fichier 'android/build.gradle' est manquant."
            exit 1
          fi
          echo "Structure du projet valid√©e."

      - name: V√©rifier et installer jq
        run: |
          if ! command -v jq &> /dev/null; then
            echo "jq n'est pas install√©, installation en cours..."
            sudo apt-get update && sudo apt-get install -y jq
          else
            echo "jq est d√©j√† install√©."
          fi

      - name: Install Android SDK (cmdline-tools)
        run: |
          echo "Installation du SDK Android..."
          mkdir -p android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk.zip
          unzip sdk.zip -d tmp-sdk
          mv tmp-sdk/cmdline-tools android-sdk/cmdline-tools/latest
          rm -rf tmp-sdk sdk.zip
          echo "ANDROID_HOME=$PWD/android-sdk" >> $GITHUB_ENV
          echo "$PWD/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$PWD/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "ANDROID_SDK_ROOT=$PWD/android-sdk" >> $GITHUB_ENV

      - name: Accepter les licences SDK et installer les composants n√©cessaires
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;26.1.10909125"
          sdkmanager --update

      - name: Lire version de Node.js depuis package.json
        id: detect-node
        run: |
          if [ -f "package.json" ]; then
            version=$(jq -r '.engines.node' package.json)
            if [ "$version" == "null" ] || [ -z "$version" ]; then
              echo "version=18" >> $GITHUB_OUTPUT
            else
              echo "version=$version" >> $GITHUB_OUTPUT
            fi
          else
            echo "version=18" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.detect-node.outputs.version }}

      - name: Installer les d√©pendances npm (ci ou install)
        run: |
          if [ -f "package-lock.json" ]; then
            echo "package-lock.json trouv√©. Utilisation de 'npm ci'..."
            npm ci
          else
            echo "package-lock.json absent. Utilisation de 'npm install'..."
            npm install
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configurer l'acc√®s √† FFmpeg Kit
        run: |
          echo "Ajout du repo FFmpeg Kit dans android/build.gradle..."
          sed -i '/allprojects {/,/}/ {
            /repositories {/a \
                maven { url "https://maven.pkg.github.com/arthenica/ffmpeg-kit" \n            credentials { \n                username = System.getenv("GITHUB_ACTOR") \n                password = System.getenv("GITHUB_TOKEN") \n            } \n        }
          }' android/build.gradle

      - name: G√©n√©rer un keystore de d√©bogage
        run: |
          if ! keytool -list -v -keystore android/app/debug.keystore -alias androiddebugkey -storepass android > /dev/null 2>&1; then
            echo "G√©n√©ration d'une nouvelle cl√© de d√©bogage..."
            keytool -genkeypair \
              -v \
              -keystore android/app/debug.keystore \
              -alias androiddebugkey \
              -storepass android \
              -keypass android \
              -keyalg RSA \
              -keysize 2048 \
              -validity 10000 \
              -dname "CN=Android Debug,O=Android,C=US" \
              -deststoretype pkcs12
          else
            echo "La cl√© androiddebugkey existe d√©j√†. Aucune action requise."
          fi

      - name: Build Debug APK
        run: ./gradlew assembleDebug --no-daemon
        working-directory: android

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 7
